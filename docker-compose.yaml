services:
  # ------------------------------------------------
  # CONTAINER DA API (SPRING BOOT)
  # ------------------------------------------------
  api:
    build:
      context: api
      dockerfile: Dockerfile
    container_name: processo-seletivo-api
    ports:
      - "8080:8080"
    environment:
      # Spring Boot
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/${DB_MAIN}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      # Min.IO
      APP_MINIO_ENDPOINT: ${MINIO_URL}
      APP_MINIO_ACCESSKEY: ${MINIO_USER}
      APP_MINIO_SECRETKEY: ${MINIO_PASSWORD}
      APP_MINIO_BUCKETNAME: ${MINIO_BUCKETNAME}
    networks:
      - seletivo-network
    depends_on:
      postgresql:
        condition: service_healthy
      minio:
        condition: service_healthy

  # ------------------------------------------------
  # CONTAINER MIN.IO - OBJECT STORAGE SYSTEM
  # ------------------------------------------------
  minio:
    container_name: minio
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    networks:
      - seletivo-network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: always

  # ------------------------------------------------
  # CONTAINER POSTGRESQL - DATABASE
  # ------------------------------------------------
  postgresql:
    container_name: postgresql
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_MAIN}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - seletivo-network
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${DB_USER} -d ${DB_MAIN} -c 'SELECT 1' || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: always

volumes:
  postgres-data:
  minio-data:

networks:
  seletivo-network:
